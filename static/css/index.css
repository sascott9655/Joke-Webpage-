/* repeat tag in other html files */
body{
	background-color:rgb(202, 241, 255);
	text-align: center;
	font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
	--color_font: red;
	--color_font2: rgb(255, 179, 14);
	--color_font3: rgb(140, 36, 236);
	--color_font4: rgb(236, 139, 236);
}
/* repeat tag in other html files */
h1 {
	color: rgb(34, 109, 221);
	text-align: center;
}
.instructions{
	max-width: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
	height: 120px;
/* nested p tag not like other p tags due to it having a parent */
	p{
		max-width: 600px;
	}
}

main{
	display: flex;
	justify-content: center;	
}
.scroll-box{
	height:600px;
	width:800px;
	border:1px solid rgb(34, 109, 221);
	font:16px/26px Georgia, Garamond, Serif;
	overflow:auto;
}
.joke-space{
	margin-top: 20px;
}
/* repeat tag */
button{
	display: inline-block;
	color: rgb(13, 90, 13);
	background-color: rgb(255, 244, 233);
	border-radius: 15px;
	border-color:  rgb(252, 230, 209);
	box-shadow: 3px 3px 5px grey;
}
/* repeat tag */
button:hover{
	background-color: rgb(253, 178, 108);
	border-color:  rgb(253, 178, 108);
	color:black;
}
/* do i need it to be an id? why not class */
#danger-button{
	height: 50px;
	border-color: rgb(180, 23, 23);
	background-color: rgb(206, 4, 4);
	color: white;
}
footer{
	/* how to fix footer  */
	position: fixed; 
	left: 0;
  	bottom: 0;
	width: 100%;
	text-align: center;
}
#delete-button{
	display: inline-block;
}

hr, #username{
	color:rgb(34, 109, 221);
}
.aligning-content{
	display: flex; /* put contents in a flex box */
	flex-direction: row; /* puts it all in one row */
	justify-content: center; /* puts the contents in the center of the page */
	align-items: center; /* aligns the items in the flex box so the text area and buttons arent wide */
	padding-top: 10px; /* gives padding above the box */
	gap: 10px; /* gap spaces between each of the elements(used for parent classes) */
}
/* Title page */
.header-container{
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding:10px 20px;
	position: relative;
}
/* Work on this later to align user text when they sign-in */
.title{
	margin: 0 auto; /* Used to center the header h1 in this case */
	position: absolute; /* allows elements to be positioned based on an absolute point on the page, relative to its parent element. This ensures the element's position is the same even if the page is resized or the content is changed. */
	left: 50%; /* moves the left edge of an element to the center of its containing block. It's often used in conjunction with transform: translateX(-50%) to horizontally center an element within its container. */
	transform: translateX(-50%);
} 

/* Work on this later to align user text when they sign-in */
.user-actions{
	align-items: center;
	gap: 10px;
	border: 2px solid red;
	justify-self: end;
} 
.green-username{
	color: green;
	margin: 0;
}
#password-align-w-username{
	margin-left: 3px;
}